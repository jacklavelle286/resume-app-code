# GitHub Actions Workflow: .github/workflows/ami-build.yml

name: Build AMI and Update Launch Template

on:
  push:
    branches:
      - main

jobs:
  build_ami:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Print Working Directory
        run: pwd

      - name: List Root Directory Files
        run: ls -la

      - name: List Pipeline Directory Files
        run: ls -la pipeline

      - name: Set up Packer
        uses: hashicorp/setup-packer@v2
        with:
          version: '1.11.2'

      - name: Verify Packer Version
        run: packer version

      - name: Install AWS CLI and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli jq

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Get Latest AMI ID
        id: get_ami
        run: |
          LATEST_AMI=$(aws ec2 describe-images --owners self --filters "Name=name,Values=my-portfolio-ami-pipeline-image-*" --query "Images | sort_by(@, &CreationDate)[-1].ImageId" --output text)
          echo "LATEST_AMI=$LATEST_AMI"
          if [ -z "$LATEST_AMI" ] || [ "$LATEST_AMI" = "None" ] || [ "$LATEST_AMI" = "null" ]; then
            echo "No previous AMI found, using default AMI."
            LATEST_AMI="ami-057660df437592ff2"  # Replace with a valid default AMI ID
          fi
          echo "LATEST_AMI=$LATEST_AMI" >> $GITHUB_ENV

      - name: Initialize Packer
        run: |
          PACKER_LOG=1 packer init pipeline/packer-template.pkr.hcl

      - name: Validate Packer Template
        run: |
          packer validate -var "source_ami=${{ env.LATEST_AMI }}" -var "template_dir=$PWD/pipeline" pipeline/packer-template.pkr.hcl

      - name: Build AMI with Packer
        id: build_ami
        env:
          PACKER_LOG: 1
        run: |
          packer build -machine-readable -var "source_ami=${{ env.LATEST_AMI }}" -var "template_dir=$PWD/pipeline" pipeline/packer-template.pkr.hcl | tee build.log
          AMI_ID=$(awk -F, '/artifact,0,id/ {print $6}' build.log | cut -d ':' -f2)
          echo "AMI_ID=$AMI_ID"
          echo "AMI_ID=$AMI_ID" >> $GITHUB_ENV

      - name: Update Launch Template
        run: |
          aws ec2 create-launch-template-version --launch-template-id lt-07cad2dbc789f2e04 --version-description "New version with AMI ${{ env.AMI_ID }}" --launch-template-data "{\"ImageId\":\"${{ env.AMI_ID }}\"}"
          # Optionally set this version as the default version
          aws ec2 modify-launch-template --launch-template-id lt-07cad2dbc789f2e04 --default-version '$Latest'
